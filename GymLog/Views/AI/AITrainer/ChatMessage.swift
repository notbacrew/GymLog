//
//  ChatMessage.swift
//  GymLog
//
//  Created by maksimchernukha on 25.09.2025.
//

import Foundation

struct ChatMessage: Identifiable, Codable {
    let id = UUID()
    let content: String
    let isUser: Bool
    let timestamp: Date
    let messageType: MessageType
    
    enum MessageType: String, Codable {
        case text = "text"
        case insight = "insight"
        case recommendation = "recommendation"
        case workoutPlan = "workoutPlan"
        case analysis = "analysis"
    }
    
    init(content: String, isUser: Bool, messageType: MessageType = .text) {
        self.content = content
        self.isUser = isUser
        self.timestamp = Date()
        self.messageType = messageType
    }
}

// MARK: - Sample Messages
extension ChatMessage {
    static let welcomeMessage = ChatMessage(
        content: "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-—Ç—Ä–µ–Ω–µ—Ä. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏, –∞–Ω–∞–ª–∏–∑–æ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π! üí™",
        isUser: false,
        messageType: .text
    )
    
    static let quickActions = [
        "–ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–µ–ª–∏",
        "–°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", 
        "–ü–æ—á–µ–º—É –Ω–µ —Ä–∞—Å—Ç–µ—Ç?",
        "–°–æ–≤–µ—Ç –ø–æ –ø–∏—Ç–∞–Ω–∏—é",
        "–ú–æ—Ç–∏–≤–∞—Ü–∏—è"
    ]
}
